name: common
on:
  workflow_call:
    inputs:
      codecov:
        required: false
        type: boolean
        default: false
      coverage:
        required: false
        type: boolean
        default: false
      threshold:
        required: false
        type: number
        default: 70

    secrets:
      codecov_token:
        required: false
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version-file: ./go.mod

      - name: Build Go
        if: ${{ success() }}
        run: |
          go build -v ./...

  lint:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v5
      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version-file: ./go.mod

      - name: Lint Go
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.5.0
          args: --timeout=10m

  test:
    runs-on: ubuntu-latest
    needs:
      - build
      - lint
    steps:
      - uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version-file: ./go.mod

      - name: Load test
        run: |
          go test ./...

  coverage:
    runs-on: ubuntu-latest
    needs:
      - build
      - lint
      - test
    if: ${{ inputs.coverage }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version-file: ./go.mod
      - name: Load test
        run: |
          go test -coverprofile=coverage.out -covermode=atomic ./...

      - name: Check coverage threshold
        run: |
          COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print int($3)}')
          THRESHOLD=${{ inputs.threshold }}
          echo "Coverage: $COVERAGE%"
          echo "Threshold: $THRESHOLD%"
          if [ "$COVERAGE" -lt "$THRESHOLD" ]; then
            echo "❌ Coverage $COVERAGE% is below $THRESHOLD%"
            exit 1
          fi
            echo "✅ Coverage $COVERAGE% meets $THRESHOLD% threshold"

  codecov:
    needs:
      - build
      - lint
      - test
    runs-on: ubuntu-latest
    if: ${{ inputs.codecov }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version: "^1.21.1"
      - run: |
          go test -coverprofile=coverage.out -covermode=atomic ./...
      - uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: ./coverage.out
          token: ${{ secrets.codecov_token }}
